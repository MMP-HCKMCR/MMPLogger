//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace MMPLogger.MMPWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MMPServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MMPService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGroupsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersForGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEventTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEventTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventTypeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventTypeByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEventTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveEventTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserEventByEventTypeNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserEventByEventTypeIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MMPService() {
            this.Url = global::MMPLogger.Properties.Settings.Default.MMPLogger_MMPWebService_MMPService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event AddUserToGroupCompletedEventHandler AddUserToGroupCompleted;
        
        /// <remarks/>
        public event GetUserByIdCompletedEventHandler GetUserByIdCompleted;
        
        /// <remarks/>
        public event GetAllUsersCompletedEventHandler GetAllUsersCompleted;
        
        /// <remarks/>
        public event GetUserByNameCompletedEventHandler GetUserByNameCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event RemoveUserDetailsCompletedEventHandler RemoveUserDetailsCompleted;
        
        /// <remarks/>
        public event AddGroupCompletedEventHandler AddGroupCompleted;
        
        /// <remarks/>
        public event GetAllGroupsCompletedEventHandler GetAllGroupsCompleted;
        
        /// <remarks/>
        public event GetGroupByIdCompletedEventHandler GetGroupByIdCompleted;
        
        /// <remarks/>
        public event GetGroupByNameCompletedEventHandler GetGroupByNameCompleted;
        
        /// <remarks/>
        public event GetAllGroupsForUserCompletedEventHandler GetAllGroupsForUserCompleted;
        
        /// <remarks/>
        public event GetAllUsersForGroupCompletedEventHandler GetAllUsersForGroupCompleted;
        
        /// <remarks/>
        public event UpdateGroupCompletedEventHandler UpdateGroupCompleted;
        
        /// <remarks/>
        public event RemoveGroupCompletedEventHandler RemoveGroupCompleted;
        
        /// <remarks/>
        public event RemoveUserFromGroupCompletedEventHandler RemoveUserFromGroupCompleted;
        
        /// <remarks/>
        public event AddEventTypeCompletedEventHandler AddEventTypeCompleted;
        
        /// <remarks/>
        public event GetAllEventTypesCompletedEventHandler GetAllEventTypesCompleted;
        
        /// <remarks/>
        public event GetEventTypeByIdCompletedEventHandler GetEventTypeByIdCompleted;
        
        /// <remarks/>
        public event GetEventTypeByNameCompletedEventHandler GetEventTypeByNameCompleted;
        
        /// <remarks/>
        public event UpdateEventTypeCompletedEventHandler UpdateEventTypeCompleted;
        
        /// <remarks/>
        public event RemoveEventTypeCompletedEventHandler RemoveEventTypeCompleted;
        
        /// <remarks/>
        public event AddUserEventByEventTypeNameCompletedEventHandler AddUserEventByEventTypeNameCompleted;
        
        /// <remarks/>
        public event AddUserEventByEventTypeIdCompletedEventHandler AddUserEventByEventTypeIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User AddUser(string name, string userName, string token, string mobileNumber, string password, string emailAddress) {
            object[] results = this.Invoke("AddUser", new object[] {
                        name,
                        userName,
                        token,
                        mobileNumber,
                        password,
                        emailAddress});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(string name, string userName, string token, string mobileNumber, string password, string emailAddress) {
            this.AddUserAsync(name, userName, token, mobileNumber, password, emailAddress, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(string name, string userName, string token, string mobileNumber, string password, string emailAddress, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        name,
                        userName,
                        token,
                        mobileNumber,
                        password,
                        emailAddress}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserToGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User AddUserToGroup(int userId, int groupId) {
            object[] results = this.Invoke("AddUserToGroup", new object[] {
                        userId,
                        groupId});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(int userId, int groupId) {
            this.AddUserToGroupAsync(userId, groupId, null);
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(int userId, int groupId, object userState) {
            if ((this.AddUserToGroupOperationCompleted == null)) {
                this.AddUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToGroupOperationCompleted);
            }
            this.InvokeAsync("AddUserToGroup", new object[] {
                        userId,
                        groupId}, this.AddUserToGroupOperationCompleted, userState);
        }
        
        private void OnAddUserToGroupOperationCompleted(object arg) {
            if ((this.AddUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToGroupCompleted(this, new AddUserToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetUserById(int userId) {
            object[] results = this.Invoke("GetUserById", new object[] {
                        userId});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIdAsync(int userId) {
            this.GetUserByIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserByIdAsync(int userId, object userState) {
            if ((this.GetUserByIdOperationCompleted == null)) {
                this.GetUserByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIdOperationCompleted);
            }
            this.InvokeAsync("GetUserById", new object[] {
                        userId}, this.GetUserByIdOperationCompleted, userState);
        }
        
        private void OnGetUserByIdOperationCompleted(object arg) {
            if ((this.GetUserByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIdCompleted(this, new GetUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] GetAllUsers() {
            object[] results = this.Invoke("GetAllUsers", new object[0]);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersAsync() {
            this.GetAllUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUsersAsync(object userState) {
            if ((this.GetAllUsersOperationCompleted == null)) {
                this.GetAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllUsers", new object[0], this.GetAllUsersOperationCompleted, userState);
        }
        
        private void OnGetAllUsersOperationCompleted(object arg) {
            if ((this.GetAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetUserByName(string userName) {
            object[] results = this.Invoke("GetUserByName", new object[] {
                        userName});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByNameAsync(string userName) {
            this.GetUserByNameAsync(userName, null);
        }
        
        /// <remarks/>
        public void GetUserByNameAsync(string userName, object userState) {
            if ((this.GetUserByNameOperationCompleted == null)) {
                this.GetUserByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByNameOperationCompleted);
            }
            this.InvokeAsync("GetUserByName", new object[] {
                        userName}, this.GetUserByNameOperationCompleted, userState);
        }
        
        private void OnGetUserByNameOperationCompleted(object arg) {
            if ((this.GetUserByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByNameCompleted(this, new GetUserByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User UpdateUser(int userId, string userName, string name, string token, string mobileNumber, string password, string emailAddress) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        userId,
                        userName,
                        name,
                        token,
                        mobileNumber,
                        password,
                        emailAddress});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(int userId, string userName, string name, string token, string mobileNumber, string password, string emailAddress) {
            this.UpdateUserAsync(userId, userName, name, token, mobileNumber, password, emailAddress, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(int userId, string userName, string name, string token, string mobileNumber, string password, string emailAddress, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        userId,
                        userName,
                        name,
                        token,
                        mobileNumber,
                        password,
                        emailAddress}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveUserDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveUserDetails(int userId) {
            this.Invoke("RemoveUserDetails", new object[] {
                        userId});
        }
        
        /// <remarks/>
        public void RemoveUserDetailsAsync(int userId) {
            this.RemoveUserDetailsAsync(userId, null);
        }
        
        /// <remarks/>
        public void RemoveUserDetailsAsync(int userId, object userState) {
            if ((this.RemoveUserDetailsOperationCompleted == null)) {
                this.RemoveUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserDetailsOperationCompleted);
            }
            this.InvokeAsync("RemoveUserDetails", new object[] {
                        userId}, this.RemoveUserDetailsOperationCompleted, userState);
        }
        
        private void OnRemoveUserDetailsOperationCompleted(object arg) {
            if ((this.RemoveUserDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group AddGroup(string groupName) {
            object[] results = this.Invoke("AddGroup", new object[] {
                        groupName});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupAsync(string groupName) {
            this.AddGroupAsync(groupName, null);
        }
        
        /// <remarks/>
        public void AddGroupAsync(string groupName, object userState) {
            if ((this.AddGroupOperationCompleted == null)) {
                this.AddGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupOperationCompleted);
            }
            this.InvokeAsync("AddGroup", new object[] {
                        groupName}, this.AddGroupOperationCompleted, userState);
        }
        
        private void OnAddGroupOperationCompleted(object arg) {
            if ((this.AddGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupCompleted(this, new AddGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllGroups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GetAllGroups() {
            object[] results = this.Invoke("GetAllGroups", new object[0]);
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGroupsAsync() {
            this.GetAllGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllGroupsAsync(object userState) {
            if ((this.GetAllGroupsOperationCompleted == null)) {
                this.GetAllGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAllGroups", new object[0], this.GetAllGroupsOperationCompleted, userState);
        }
        
        private void OnGetAllGroupsOperationCompleted(object arg) {
            if ((this.GetAllGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGroupsCompleted(this, new GetAllGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group GetGroupById(int groupId) {
            object[] results = this.Invoke("GetGroupById", new object[] {
                        groupId});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupByIdAsync(int groupId) {
            this.GetGroupByIdAsync(groupId, null);
        }
        
        /// <remarks/>
        public void GetGroupByIdAsync(int groupId, object userState) {
            if ((this.GetGroupByIdOperationCompleted == null)) {
                this.GetGroupByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupByIdOperationCompleted);
            }
            this.InvokeAsync("GetGroupById", new object[] {
                        groupId}, this.GetGroupByIdOperationCompleted, userState);
        }
        
        private void OnGetGroupByIdOperationCompleted(object arg) {
            if ((this.GetGroupByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupByIdCompleted(this, new GetGroupByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group GetGroupByName(string GroupName) {
            object[] results = this.Invoke("GetGroupByName", new object[] {
                        GroupName});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupByNameAsync(string GroupName) {
            this.GetGroupByNameAsync(GroupName, null);
        }
        
        /// <remarks/>
        public void GetGroupByNameAsync(string GroupName, object userState) {
            if ((this.GetGroupByNameOperationCompleted == null)) {
                this.GetGroupByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupByNameOperationCompleted);
            }
            this.InvokeAsync("GetGroupByName", new object[] {
                        GroupName}, this.GetGroupByNameOperationCompleted, userState);
        }
        
        private void OnGetGroupByNameOperationCompleted(object arg) {
            if ((this.GetGroupByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupByNameCompleted(this, new GetGroupByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllGroupsForUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GetAllGroupsForUser(int userId) {
            object[] results = this.Invoke("GetAllGroupsForUser", new object[] {
                        userId});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGroupsForUserAsync(int userId) {
            this.GetAllGroupsForUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAllGroupsForUserAsync(int userId, object userState) {
            if ((this.GetAllGroupsForUserOperationCompleted == null)) {
                this.GetAllGroupsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGroupsForUserOperationCompleted);
            }
            this.InvokeAsync("GetAllGroupsForUser", new object[] {
                        userId}, this.GetAllGroupsForUserOperationCompleted, userState);
        }
        
        private void OnGetAllGroupsForUserOperationCompleted(object arg) {
            if ((this.GetAllGroupsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGroupsForUserCompleted(this, new GetAllGroupsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUsersForGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] GetAllUsersForGroup(int groupId) {
            object[] results = this.Invoke("GetAllUsersForGroup", new object[] {
                        groupId});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersForGroupAsync(int groupId) {
            this.GetAllUsersForGroupAsync(groupId, null);
        }
        
        /// <remarks/>
        public void GetAllUsersForGroupAsync(int groupId, object userState) {
            if ((this.GetAllUsersForGroupOperationCompleted == null)) {
                this.GetAllUsersForGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersForGroupOperationCompleted);
            }
            this.InvokeAsync("GetAllUsersForGroup", new object[] {
                        groupId}, this.GetAllUsersForGroupOperationCompleted, userState);
        }
        
        private void OnGetAllUsersForGroupOperationCompleted(object arg) {
            if ((this.GetAllUsersForGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersForGroupCompleted(this, new GetAllUsersForGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group UpdateGroup(int groupId, string groupName) {
            object[] results = this.Invoke("UpdateGroup", new object[] {
                        groupId,
                        groupName});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupAsync(int groupId, string groupName) {
            this.UpdateGroupAsync(groupId, groupName, null);
        }
        
        /// <remarks/>
        public void UpdateGroupAsync(int groupId, string groupName, object userState) {
            if ((this.UpdateGroupOperationCompleted == null)) {
                this.UpdateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateGroup", new object[] {
                        groupId,
                        groupName}, this.UpdateGroupOperationCompleted, userState);
        }
        
        private void OnUpdateGroupOperationCompleted(object arg) {
            if ((this.UpdateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupCompleted(this, new UpdateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveGroup(int groupId) {
            this.Invoke("RemoveGroup", new object[] {
                        groupId});
        }
        
        /// <remarks/>
        public void RemoveGroupAsync(int groupId) {
            this.RemoveGroupAsync(groupId, null);
        }
        
        /// <remarks/>
        public void RemoveGroupAsync(int groupId, object userState) {
            if ((this.RemoveGroupOperationCompleted == null)) {
                this.RemoveGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveGroup", new object[] {
                        groupId}, this.RemoveGroupOperationCompleted, userState);
        }
        
        private void OnRemoveGroupOperationCompleted(object arg) {
            if ((this.RemoveGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveUserFromGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group RemoveUserFromGroup(int userId, int groupId) {
            object[] results = this.Invoke("RemoveUserFromGroup", new object[] {
                        userId,
                        groupId});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(int userId, int groupId) {
            this.RemoveUserFromGroupAsync(userId, groupId, null);
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(int userId, int groupId, object userState) {
            if ((this.RemoveUserFromGroupOperationCompleted == null)) {
                this.RemoveUserFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserFromGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveUserFromGroup", new object[] {
                        userId,
                        groupId}, this.RemoveUserFromGroupOperationCompleted, userState);
        }
        
        private void OnRemoveUserFromGroupOperationCompleted(object arg) {
            if ((this.RemoveUserFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserFromGroupCompleted(this, new RemoveUserFromGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddEventType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EventType AddEventType(string eventName) {
            object[] results = this.Invoke("AddEventType", new object[] {
                        eventName});
            return ((EventType)(results[0]));
        }
        
        /// <remarks/>
        public void AddEventTypeAsync(string eventName) {
            this.AddEventTypeAsync(eventName, null);
        }
        
        /// <remarks/>
        public void AddEventTypeAsync(string eventName, object userState) {
            if ((this.AddEventTypeOperationCompleted == null)) {
                this.AddEventTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEventTypeOperationCompleted);
            }
            this.InvokeAsync("AddEventType", new object[] {
                        eventName}, this.AddEventTypeOperationCompleted, userState);
        }
        
        private void OnAddEventTypeOperationCompleted(object arg) {
            if ((this.AddEventTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEventTypeCompleted(this, new AddEventTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEventTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EventType[] GetAllEventTypes() {
            object[] results = this.Invoke("GetAllEventTypes", new object[0]);
            return ((EventType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEventTypesAsync() {
            this.GetAllEventTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllEventTypesAsync(object userState) {
            if ((this.GetAllEventTypesOperationCompleted == null)) {
                this.GetAllEventTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEventTypesOperationCompleted);
            }
            this.InvokeAsync("GetAllEventTypes", new object[0], this.GetAllEventTypesOperationCompleted, userState);
        }
        
        private void OnGetAllEventTypesOperationCompleted(object arg) {
            if ((this.GetAllEventTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEventTypesCompleted(this, new GetAllEventTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEventTypeById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EventType GetEventTypeById(int eventTypeId) {
            object[] results = this.Invoke("GetEventTypeById", new object[] {
                        eventTypeId});
            return ((EventType)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventTypeByIdAsync(int eventTypeId) {
            this.GetEventTypeByIdAsync(eventTypeId, null);
        }
        
        /// <remarks/>
        public void GetEventTypeByIdAsync(int eventTypeId, object userState) {
            if ((this.GetEventTypeByIdOperationCompleted == null)) {
                this.GetEventTypeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventTypeByIdOperationCompleted);
            }
            this.InvokeAsync("GetEventTypeById", new object[] {
                        eventTypeId}, this.GetEventTypeByIdOperationCompleted, userState);
        }
        
        private void OnGetEventTypeByIdOperationCompleted(object arg) {
            if ((this.GetEventTypeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventTypeByIdCompleted(this, new GetEventTypeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEventTypeByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EventType GetEventTypeByName(string eventTypeName) {
            object[] results = this.Invoke("GetEventTypeByName", new object[] {
                        eventTypeName});
            return ((EventType)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventTypeByNameAsync(string eventTypeName) {
            this.GetEventTypeByNameAsync(eventTypeName, null);
        }
        
        /// <remarks/>
        public void GetEventTypeByNameAsync(string eventTypeName, object userState) {
            if ((this.GetEventTypeByNameOperationCompleted == null)) {
                this.GetEventTypeByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventTypeByNameOperationCompleted);
            }
            this.InvokeAsync("GetEventTypeByName", new object[] {
                        eventTypeName}, this.GetEventTypeByNameOperationCompleted, userState);
        }
        
        private void OnGetEventTypeByNameOperationCompleted(object arg) {
            if ((this.GetEventTypeByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventTypeByNameCompleted(this, new GetEventTypeByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEventType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EventType UpdateEventType(int eventTypeId, string eventTypeName) {
            object[] results = this.Invoke("UpdateEventType", new object[] {
                        eventTypeId,
                        eventTypeName});
            return ((EventType)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEventTypeAsync(int eventTypeId, string eventTypeName) {
            this.UpdateEventTypeAsync(eventTypeId, eventTypeName, null);
        }
        
        /// <remarks/>
        public void UpdateEventTypeAsync(int eventTypeId, string eventTypeName, object userState) {
            if ((this.UpdateEventTypeOperationCompleted == null)) {
                this.UpdateEventTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEventTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateEventType", new object[] {
                        eventTypeId,
                        eventTypeName}, this.UpdateEventTypeOperationCompleted, userState);
        }
        
        private void OnUpdateEventTypeOperationCompleted(object arg) {
            if ((this.UpdateEventTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEventTypeCompleted(this, new UpdateEventTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveEventType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveEventType(int eventTypeId) {
            this.Invoke("RemoveEventType", new object[] {
                        eventTypeId});
        }
        
        /// <remarks/>
        public void RemoveEventTypeAsync(int eventTypeId) {
            this.RemoveEventTypeAsync(eventTypeId, null);
        }
        
        /// <remarks/>
        public void RemoveEventTypeAsync(int eventTypeId, object userState) {
            if ((this.RemoveEventTypeOperationCompleted == null)) {
                this.RemoveEventTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveEventTypeOperationCompleted);
            }
            this.InvokeAsync("RemoveEventType", new object[] {
                        eventTypeId}, this.RemoveEventTypeOperationCompleted, userState);
        }
        
        private void OnRemoveEventTypeOperationCompleted(object arg) {
            if ((this.RemoveEventTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveEventTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserEventByEventTypeName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Event AddUserEventByEventTypeName(string userName, string eventTypeName) {
            object[] results = this.Invoke("AddUserEventByEventTypeName", new object[] {
                        userName,
                        eventTypeName});
            return ((Event)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserEventByEventTypeNameAsync(string userName, string eventTypeName) {
            this.AddUserEventByEventTypeNameAsync(userName, eventTypeName, null);
        }
        
        /// <remarks/>
        public void AddUserEventByEventTypeNameAsync(string userName, string eventTypeName, object userState) {
            if ((this.AddUserEventByEventTypeNameOperationCompleted == null)) {
                this.AddUserEventByEventTypeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserEventByEventTypeNameOperationCompleted);
            }
            this.InvokeAsync("AddUserEventByEventTypeName", new object[] {
                        userName,
                        eventTypeName}, this.AddUserEventByEventTypeNameOperationCompleted, userState);
        }
        
        private void OnAddUserEventByEventTypeNameOperationCompleted(object arg) {
            if ((this.AddUserEventByEventTypeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserEventByEventTypeNameCompleted(this, new AddUserEventByEventTypeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserEventByEventTypeId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Event AddUserEventByEventTypeId(string userName, int eventTypeId) {
            object[] results = this.Invoke("AddUserEventByEventTypeId", new object[] {
                        userName,
                        eventTypeId});
            return ((Event)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserEventByEventTypeIdAsync(string userName, int eventTypeId) {
            this.AddUserEventByEventTypeIdAsync(userName, eventTypeId, null);
        }
        
        /// <remarks/>
        public void AddUserEventByEventTypeIdAsync(string userName, int eventTypeId, object userState) {
            if ((this.AddUserEventByEventTypeIdOperationCompleted == null)) {
                this.AddUserEventByEventTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserEventByEventTypeIdOperationCompleted);
            }
            this.InvokeAsync("AddUserEventByEventTypeId", new object[] {
                        userName,
                        eventTypeId}, this.AddUserEventByEventTypeIdOperationCompleted, userState);
        }
        
        private void OnAddUserEventByEventTypeIdOperationCompleted(object arg) {
            if ((this.AddUserEventByEventTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserEventByEventTypeIdCompleted(this, new AddUserEventByEventTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class User {
        
        private int userIdField;
        
        private string userNameField;
        
        private string tokenField;
        
        private Group[] groupsField;
        
        private string nameField;
        
        private string mobileNumberField;
        
        private string emailField;
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public Group[] Groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string MobileNumber {
            get {
                return this.mobileNumberField;
            }
            set {
                this.mobileNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Group {
        
        private int groupIdField;
        
        private string groupNameField;
        
        private User[] usersField;
        
        /// <remarks/>
        public int GroupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public User[] Users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Event {
        
        private int eventIdField;
        
        private User userField;
        
        private EventType eventTypeField;
        
        private System.DateTime eventTimeField;
        
        /// <remarks/>
        public int EventId {
            get {
                return this.eventIdField;
            }
            set {
                this.eventIdField = value;
            }
        }
        
        /// <remarks/>
        public User User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public EventType EventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EventType {
        
        private int eventTypeIdField;
        
        private string eventTypeNameField;
        
        /// <remarks/>
        public int EventTypeId {
            get {
                return this.eventTypeIdField;
            }
            set {
                this.eventTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string EventTypeName {
            get {
                return this.eventTypeNameField;
            }
            set {
                this.eventTypeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddUserToGroupCompletedEventHandler(object sender, AddUserToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserByIdCompletedEventHandler(object sender, GetUserByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllUsersCompletedEventHandler(object sender, GetAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserByNameCompletedEventHandler(object sender, GetUserByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemoveUserDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddGroupCompletedEventHandler(object sender, AddGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllGroupsCompletedEventHandler(object sender, GetAllGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetGroupByIdCompletedEventHandler(object sender, GetGroupByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetGroupByNameCompletedEventHandler(object sender, GetGroupByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllGroupsForUserCompletedEventHandler(object sender, GetAllGroupsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGroupsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGroupsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllUsersForGroupCompletedEventHandler(object sender, GetAllUsersForGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersForGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersForGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateGroupCompletedEventHandler(object sender, UpdateGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemoveGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemoveUserFromGroupCompletedEventHandler(object sender, RemoveUserFromGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserFromGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserFromGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddEventTypeCompletedEventHandler(object sender, AddEventTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEventTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEventTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EventType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EventType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllEventTypesCompletedEventHandler(object sender, GetAllEventTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEventTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEventTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EventType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EventType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetEventTypeByIdCompletedEventHandler(object sender, GetEventTypeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventTypeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventTypeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EventType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EventType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetEventTypeByNameCompletedEventHandler(object sender, GetEventTypeByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventTypeByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventTypeByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EventType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EventType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateEventTypeCompletedEventHandler(object sender, UpdateEventTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEventTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEventTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EventType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EventType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RemoveEventTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddUserEventByEventTypeNameCompletedEventHandler(object sender, AddUserEventByEventTypeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserEventByEventTypeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserEventByEventTypeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Event Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Event)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddUserEventByEventTypeIdCompletedEventHandler(object sender, AddUserEventByEventTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserEventByEventTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserEventByEventTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Event Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Event)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591